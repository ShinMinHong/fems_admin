<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.firealarm.admin.biz.areasystem.firedetectorset.dao.FireDetectorSetDAO">

	<sql id="getList_sql">
		select *
		from  (select FDS.fire_detector_set_seq,
				      CASE WHEN FDS.fire_detector_seq IS NOT NULL THEN FD.fire_detector_name else null END AS fire_detector_name,
			 	      FDS.fire_detector_set_type,
				      FDS.fire_detector_set_value,
				      FDS.fire_detector_set_str_date,
				      FDS.fire_detector_set_end_date,
				      FDS.fire_detector_set_send_yn,
				      FDS.fire_detector_set_send_date,
				      FDS.reg_date,
				      FDS.reg_admin_id,
				      FDS.upd_date,
				      FDS.upd_admin_id,
				      FD.ctn_no,
				      A.mng_area_seq,
				      A.mng_area_name,
				      M.market_seq,
				      M.market_name,
				      S.store_seq,
				      S.store_name
			   from   fa_fire_detector_set as FDS
			   INNER  JOIN fa_fire_detector as FD on
				      FD.fire_detector_seq = FDS.fire_detector_seq
			   LEFT   JOIN fa_store as S on
				      FD.store_seq = S.store_seq
			   LEFT   JOIN fa_market as M on
				      S.market_seq = M.market_seq
			   LEFT   JOIN fa_mng_area as A on
				      M.mng_area_seq = A.mng_area_seq
			  ) AS SUB
		<where>
			<!-- 점포 선택 해제 된 곳까지  -->
			((mng_area_seq= #{me.mngAreaSeq} :: Integer) or mng_area_seq is null )
			<if test="!@Ognl@isEmpty(search.marketSeq)">
				AND market_seq = #{search.marketSeq} :: Integer
			</if>
			<if test="!@Ognl@isEmpty(search.storeName)">
				AND store_name LIKE CONCAT('%', #{search.storeName},'%')
			</if>
			<if test="!@Ognl@isEmpty(search.ctnNo)">
				AND ctn_no LIKE CONCAT('%', #{search.ctnNo},'%')
			</if>
			<if test="!@Ognl@isEmpty(search.modelNo)">
				AND model_no LIKE CONCAT('%', #{search.modelNo},'%')
			</if>
			<if test="!@Ognl@isEmpty(search.ctnNo)">
				AND ctn_no LIKE CONCAT('%', #{search.ctnNo},'%')
			</if>
			<if test="!@Ognl@isEmpty(search.fireDetectorSetType)">
				AND fire_detector_set_type = #{search.fireDetectorSetType}
			</if>
			<if test="!@Ognl@isEmpty(search.useYn)">
				AND fire_detector_set_send_yn = #{search.useYn}::bool
			</if>
		   	AND fire_detector_set_str_date::date &lt;= #{search.startDate}::date
		   	AND fire_detector_set_end_date::date &gt;= #{search.endDate}::date
		</where>
	</sql>

	<select id="getListAll" parameterType="java.util.Map" resultType="com.firealarm.admin.biz.areasystem.firedetectorset.vo.FireDetectorSetVO">
		<include refid="getList_sql" />
		<if test="!@Ognl@isEmpty(sort)">
			ORDER BY  ${sort}
		</if>
	</select>

	<select id="getListPage" parameterType="java.util.Map" resultType="com.firealarm.admin.biz.areasystem.firedetectorset.vo.FireDetectorSetVO">
		<include refid="base.pagingStartWithRn" />
		<include refid="getList_sql" />
		<if test="!@Ognl@isEmpty(sort)">
			ORDER BY ${sort}
		</if>
		<include refid="base.pagingEnd" />
	</select>

	<select id="getListCount" parameterType="java.util.Map" resultType="int">
		<include refid="base.countStart" />
		<include refid="getList_sql" />
		<include refid="base.countEnd" />
	</select>

	<!-- 상세  -->
	<select id="getByFireDetectorSetSeq" parameterType="java.util.Map" resultType="com.firealarm.admin.biz.areasystem.firedetectorset.vo.FireDetectorSetVO">
		SELECT FDS.fire_detector_set_seq,
			   FDS.fire_detector_set_type,
			   FDS.fire_detector_set_value,
			   FDS.fire_detector_set_str_date,
			   FDS.fire_detector_set_end_date,
			   FDS.fire_detector_set_send_yn,
			   FDS.fire_detector_set_send_date,
			   FDS.reg_date,
			   FDS.reg_admin_id,
			   FDS.upd_date,
			   FDS.upd_admin_id,
			   FD.ctn_no,
			   A.mng_area_seq,
			   A.mng_area_name,
			   M.market_seq,
			   M.market_name,
			   S.store_seq,
			   S.store_name
		FROM   fa_fire_detector_set as FDS
		INNER  JOIN fa_fire_detector as FD on
		       FD.fire_detector_seq = FDS.fire_detector_seq
		LEFT   JOIN fa_store as S on
		       FD.store_seq = S.store_seq
		LEFT   JOIN fa_market as M on
		       S.market_seq = M.market_seq
		LEFT   JOIN fa_mng_area as A on
		       M.mng_area_seq = A.mng_area_seq
		WHERE  FDS.fire_detector_set_seq = #{vo.fireDetectorSetSeq}
	</select>

	<!-- 등록  -->
	<insert id="insert" parameterType="java.util.Map"  useGeneratedKeys="true" keyProperty="vo.fireDetectorSetSeq">
		INSERT INTO fa_fire_detector_set
			  (fire_detector_seq,
			   fire_detector_set_type,
			   fire_detector_set_value,
			   fire_detector_set_str_date,
			   fire_detector_set_end_date,
			   reg_admin_id,
			   reg_date)
		VALUES
		      (#{vo.fireDetectorSeq},
		 	   #{vo.fireDetectorSetType},
		 	   #{vo.fireDetectorSetValue},
		 	   #{vo.fireDetectorSetStrDate},
		 	   #{vo.fireDetectorSetEndDate},
               #{vo.regAdminId},
			   now())
	</insert>

	<!-- 수정 -->
	<update id="update" parameterType="java.util.Map">
		UPDATE fa_fire_detector_set
		   SET fire_detector_seq = #{vo.fireDetectorSeq},
			   fire_detector_set_type = #{vo.fireDetectorSetType},
		 	   fire_detector_set_value = #{vo.fireDetectorSetValue},
			   fire_detector_set_str_date = #{vo.fireDetectorSetStrDate},
			   fire_detector_set_end_date = #{vo.fireDetectorSetEndDate},
			   upd_admin_id = #{vo.updAdminId},
			   upd_date = now()}
	  	 WHERE
	  	 	<if test="!@Ognl@equalsIgnoreCase(vo.fireDetectorSetSeq,'0')">
	  	 	   fire_detector_set_seq  = #{vo.fireDetectorSetSeq}
	  	 	</if>
	</update>

	<!-- 삭제  -->
	<delete id="delete" parameterType="java.util.Map">
		DELETE
		FROM   fa_fire_detector_set
		<where>
		 	fire_detector_set_seq = #{fireDetectorSetSeq}
		</where>
	</delete>

	<!-- 해당 점포에 화재감지기 설정 등록 여부 체크 -->
	<select id="getFireDetectorSetCnt" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
			count(fire_detector_set_seq)
		FROM
			fa_fire_detector_set
		<where>
			fire_detector_seq = #{storeSeq}
		</where>
	</select>

	<!-- 감지기 전송 여부 변경 -->
	<update id="preventsubmission" parameterType="java.util.Map">
		UPDATE fa_fire_detector_set
		SET    fire_detector_send_yn = true,
		       fire_detector_send_date = now()
		WHERE  fire_detector_set_seq = #{fireDetectorSetSeq}
	</update>

</mapper>